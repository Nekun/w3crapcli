#!/bin/bash
# Usage: $0 <terms|URL>
. $(dirname $(which "$0"))/vkapi.sh
TMOUT=10
spit () {
	jq -r '.response[1:][] | .url + "	" + .artist + " - " + .title' 2>/dev/null | htmldecode
}
cnt=300
t=`tempfile -p vkbashdata`
trap 'rm "$t"' EXIT
auth audio
if echo $1 | grep -q '^http'; then
	# we have an url
	$(dirname $(which "$0"))/vkgetaudio "$1"
else
	e=foobar
	while [ -n "$e" -a "$e" != null ]; do
		wget "https://api.vk.com/method/audio.search?q=`printf %s "$1" | urlencode`&offset=0&count=$cnt&access_token=${at}$caf" -O- 2> /dev/null > "$t"
		e="`jq -r '.error.error_msg' < "$t"`"
		[ -n "$e" -a "$e" != null ] && {
			echo $e 1>&2
			if [ "$e" = "Captcha needed" ]; then
				cid="`jq -r '.error.captcha_sid' < "$t"`"
				cimg="`jq -r '.error.captcha_img' < "$t"`"
				ck=`captcha <(curl -s "$cimg")`
				caf="&captcha_sid=$cid&captcha_key=$ck"
			else
				exit 1
			fi
		}
	done
	n="`jq -r '.response[0]' < "$t"`"
	[ "$n" -eq 0 ] && {
		echo Nothing found. Either there are no tracks satisfying the request, or you are sending requests too frequently. 1>&2
		exit 1
	}
	if [ ! "$n" -eq 0 ]; then
		spit < "$t"
		for o in `seq 300 300 "$n"`; do
			wget "https://api.vk.com/method/audio.search?q=`printf %s "$1" | urlencode`&offset=$o&count=$cnt&access_token=$at" -O- 2> /dev/null > "$t"
			[ "`jq -r '.response[1]' < "$t"`" = null ] && break
			sleep 0.3
			spit < "$t"
		done
	else
		echo -n 'dbg: ' >&2
		cat $t >&2
	fi
fi
